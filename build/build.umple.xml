<?xml version="1.0" encoding="UTF-8"?>
<project basedir=".." default="build" name="UmpleCore" >


  <!-- ```````````````````````````
    Environment Variables
  ``````````````````````````` -->
  <import file="_template.xml" />

  <property name="project.path" value="cruise.umple"/>
  <property name="xtext.project.path" value="cruise.umple.xtext"/>
  <property name="jopt-simple.project.path" value="jopt-simple"/>
  <property name="bin.path" value="${project.path}/bin"/>
  <property name="dist.path" value="dist/cruise.umple"/>
  <property name="test.output.path" value="dist/qa/cruise.umple"/>

  <path id="project.classpath">
    <pathelement location="${bin.path}"/>
    <path refid="umple.classpath"/>
    <path refid="junit4.classpath"/>
    <path refid="xtext_core.classpath"/>
  </path>

  <path id="xtext.project.classpath">
    <pathelement location="${bin.path}"/>
    <path refid="umple.classpath"/>
    <path refid="junit4.classpath"/>
    <path refid="xtext_core.classpath"/>
  </path>

 <path id="validator.project.classpath">
    <pathelement location="cruise.umple.validator/bin"/>
    <path refid="umple.classpath"/>
    <path refid="junit4.classpath"/>
    <path refid="validator_core.classpath"/>
  </path>

 <path id="umplificator.project.classpath">
    <pathelement location="cruise.umplificator/bin"/>
    <path refid="umple.classpath"/>
    <path refid="junit4.classpath"/>
    <path refid="validator_core.classpath"/>
  </path>

  <!-- ```````````````````````````
    Clean up and initialize any potential byproduct
  ``````````````````````````` -->

  <target name="clean">
    <antcall target="template.clean" />
    <delete dir="${project.path}/src-gen-umple" failonerror="false" />
    <delete dir="cruise.umplificator/src-gen-umple" failonerror="false" />
    <delete dir="cruise.umple.validator/src-gen-umple" failonerror="false" />
  </target>

  <target name="resetUmpleSelf">
    <delete file="cruise.umple/src/rules.grammar"/>
    <delete file="cruise.umple/bin/rules.grammar"/>
    <java jar="lib/umple.jar" fork="true" failonerror="true">
      <arg value="cruise.umple/src/Master.ump"/>
    </java>
     <java jar="lib/umple.jar" fork="true" failonerror="true">
      <arg value="cruise.umple.validator/src/Master.ump"/>
    </java>
     <java jar="lib/umple.jar" fork="true" failonerror="true">
      <arg value="cruise.umplificator/src/Master.ump"/>
    </java>
  </target>

  <target name="umpleSelf">
    <delete file="cruise.umple/src/rules.grammar"/>
    <delete file="cruise.umple/bin/rules.grammar"/>
     <java jar="dist/umple.jar" fork="true" failonerror="true">
      <arg value="cruise.umple/src/Master.ump"/>
    </java>
     <java jar="dist/umple.jar" fork="true" failonerror="true">
      <arg value="cruise.umple.validator/src/Master.ump"/>
    </java>
  <java jar="dist/umple.jar" fork="true" failonerror="true">
      <arg value="cruise.umplificator/src/Master.ump"/>
    </java>
  </target>
 
 <!-- ```````````````````````````
    Generate JET Templates
  ``````````````````````````` -->
 
  <!-- Move the generic JET templates into the various UmpleTo* projects -->
  <target name="templates">
	<!--
	<exec executable="ruby" failonerror="true" dir="build">
		<arg value="InsertDebugCodeScript.rb" />
	</exec>	
	-->
    <copy todir="UmpleToJava/templates" overwrite="true">
      <fileset dir="UmpleToTemplate/templates" excludes="*.svn" />
    </copy>
    <copy todir="UmpleToPhp/templates" overwrite="true">
      <fileset dir="UmpleToTemplate/templates" excludes="*.svn" />
    </copy>
    <copy todir="UmpleToRuby/templates" overwrite="true">
      <fileset dir="UmpleToTemplate/templates" excludes="*.svn" />
    </copy>
    <copy todir="UmpleToCpp/templates" overwrite="true">
      <fileset dir="UmpleToTemplate/templates" excludes="*.svn" />
    </copy>
  </target>

  <!-- Unzip JDT libraries into the jar construction folder -->
  <target name="validatorJar">
    <unjar src="lib/umplificatorplugins/org.eclipse.core.contenttype_3.4.200.v20130326-1255.jar" dest="cruise.umple.validator/bin/" overwrite="true"/>
    <unjar src="lib/umplificatorplugins/org.eclipse.core.jobs_3.5.300.v20130429-1813.jar" dest="cruise.umple.validator/bin/" overwrite="true"/>
    <unjar src="lib/umplificatorplugins/org.eclipse.core.resources_3.8.100.v20130521-2026.jar" dest="cruise.umple.validator/bin/" overwrite="true"/>
    <unjar src="lib/umplificatorplugins/org.eclipse.core.runtime_3.9.0.v20130326-1255.jar" dest="cruise.umple.validator/bin/" overwrite="true"/>
    <unjar src="lib/umplificatorplugins/org.eclipse.equinox.preferences_3.5.100.v20130422-1538.jar" dest="cruise.umple.validator/bin/" overwrite="true"/>
    <unjar src="lib/umplificatorplugins/org.eclipse.equinox.common_3.6.200.v20130402-1505.jar" dest="cruise.umple.validator/bin/" overwrite="true"/>
    <unjar src="lib/umplificatorplugins/org.eclipse.jdt.core_3.9.1.v20130905-0837.jar" dest="cruise.umple.validator/bin/" overwrite="true"/>
    <unjar src="lib/umplificatorplugins/org.eclipse.osgi_3.9.0.v20130529-1710.jar" dest="cruise.umple.validator/bin/" overwrite="true"/>
	<unjar src="lib/umplificatorplugins/org.eclipse.cdt.core_5.5.0.201309180223.jar" dest="cruise.umple.validator/bin/" overwrite="true"/>
	<unjar src="lib/umplificatorplugins/com.ibm.icu_50.1.1.v201304230130.jar" dest="cruise.umple.validator/bin/" overwrite="true"/>
  </target>
    
  <!-- Move the generated code from UmpleTo* to cruise.umple -->
  <target name="codegen">
    <copy todir="cruise.umple/src-gen-jet/cruise/umple/compiler/java" overwrite="true">
      <fileset dir="UmpleToJava/src/cruise/umple/compiler/java" excludes="*.svn" />
    </copy>
    <copy todir="cruise.umple/src-gen-jet/cruise/umple/compiler/php" overwrite="true">
      <fileset dir="UmpleToPhp/src/cruise/umple/compiler/php" excludes="*.svn" />
    </copy>
    <copy todir="cruise.umple/src-gen-jet/cruise/umple/compiler/ruby" overwrite="true">
      <fileset dir="UmpleToRuby/src/cruise/umple/compiler/ruby" excludes="*.svn" />
    </copy>
    <copy todir="cruise.umple/src-gen-jet/cruise/umple/compiler/cpp" overwrite="true">
      <fileset dir="UmpleToCpp/src/cruise/umple/compiler/cpp" excludes="*.svn" />
    </copy>
    <copy todir="cruise.umple/src-gen-jet/cruise/umple/compiler/sql" overwrite="true">
      <fileset dir="UmpleToSql/src/cruise/umple/compiler/sql" excludes="*.svn" />
    </copy> 	
  </target>

  <!-- Move RTCpp cpde to cruise.umple -->
  <target name="rtcpp">
    <copy todir="cruise.umple/src-gen-umple" overwrite="true">
      <fileset dir="cruise.umple.nebula/src" excludes="*.svn" />
    </copy>
    <copy todir="cruise.umple/src-gen-umple" overwrite="true">
      <fileset dir="UmpleToRTCpp/src" excludes="*.svn" />
    </copy>
  </target>
  
  <!-- ```````````````````````````
    Compile the application
  ``````````````````````````` -->

  <target name="compile">
    <echo message="${ant.project.name}: ${ant.file}"/>

    <javac debug="true" includeantruntime="false" debuglevel="source,lines,vars" destdir="${bin.path}" source="1.7" target="1.7">
	<src path="${xtext.project.path}/src"/>
      <src path="${xtext.project.path}/src-gen"/>
      <src path="${project.path}/src"/>
      <src path="${project.path}/src-gen-jet"/>
      <src path="${project.path}/src-gen-umple"/>
      <src path="${project.path}/test"/>
      <src path="${jopt-simple.project.path}/src/main/java"/>
      <exclude name="**/.svn"/>
      <exclude name="**/*.ump" />
      <exclude name="**/data" />
      <classpath refid="project.classpath"/>
      <classpath refid="validator.project.classpath"/>
    </javac>
    <copy todir="${bin.path}" overwrite="true">
	<fileset dir="${project.path}/src"><include name="**/*.grammar"/></fileset>
	<fileset dir="${project.path}/src"><include name="**/*.error"/></fileset>
    </copy>
    <delete file="cruise.umple/src/rules.grammar"/>
    <delete file="cruise.umple/bin/rules.grammar"/>
  </target>

  <target name="compileValidator">
    <echo message="${ant.project.name}: ${ant.file}"/>

    <javac debug="true" includeantruntime="false" debuglevel="source,lines,vars" destdir="cruise.umple.validator/bin" source="1.7" target="1.7">
      <src path="${project.path}/src"/>
      <src path="${project.path}/src-gen-jet"/>
      <src path="${project.path}/src-gen-umple"/>
      <src path="${project.path}/test"/>
      <src path="cruise.umple.validator/src-gen-umple"/>
      <src path="cruise.umple.validator/test"/>
      <src path="${jopt-simple.project.path}/src/main/java"/>
      <exclude name="**/.svn"/>
      <exclude name="**/*.ump" />
      <classpath refid="project.classpath"/>
      <classpath refid="validator.project.classpath"/>
    </javac>
    <copy todir="cruise.umple.validator/bin" overwrite="true">
	<fileset dir="${project.path}/src"><include name="**/*.grammar"/></fileset>
	<fileset dir="${project.path}/src"><include name="**/*.error"/></fileset>
    </copy>
    <delete file="cruise.umple/src/rules.grammar"/>
    <delete file="cruise.umple/bin/rules.grammar"/>
  </target>

  <target name="compileUmplificator">
    <echo message="${ant.project.name}: ${ant.file}"/>
    <javac debug="true" includeantruntime="false" debuglevel="source,lines,vars" destdir="cruise.umplificator/bin" source="1.7" target="1.7">
      <src path="${project.path}/src"/>
      <src path="${project.path}/src-gen-jet"/>
      <src path="${project.path}/src-gen-umple"/>
      <src path="${project.path}/test"/>
      <src path="cruise.umplificator/src-gen-umple"/>
       <!-- <src path="cruise.umplificator/test"/>-->
      <src path="${jopt-simple.project.path}/src/main/java"/>
      <exclude name="**/.svn"/>
      <exclude name="**/*.ump" />
      <classpath refid="project.classpath"/>
      <classpath refid="umplificator.project.classpath"/>
    </javac>
    <copy todir="cruise.umplificator/bin/" overwrite="true">
	<fileset dir="cruise.umplificator/"><include name="log4j2.xml"/></fileset>
	<fileset dir="cruise.umplificator/src/main/resources/"><include name="*.drl"/></fileset>
    </copy>
    <delete file="cruise.umple/src/rules.grammar"/>
    <delete file="cruise.umple/bin/rules.grammar"/>
  </target>

  <!-- ```````````````````````````
    Package the application
  ``````````````````````````` -->

  <target name="packageDocs">
    <java classname="cruise.umple.docs.DocumenterMain" fork="true" classpath="dist/umpledocs.jar">
      <arg value="build/reference"/>
      <arg value="${dist.path}/reference"/>
    </java>
    <copy todir="${dist.path}/reference/files">
      <fileset dir="build/reference/files"/>
    </copy>
  </target>
  
  <target name="packageUmpleonline" if="${shouldPackageUmpleOnline}">
    <copy file="dist/umplesync.jar" tofile="umpleonline/scripts/umplesync.jar" overwrite="true" />
    <copy file="dist/umple.jar" tofile="umpleonline/scripts/umple.jar" overwrite="true" />
    <copy file="dist/vml.jar" tofile="umpleonline/scripts/vml.jar" overwrite="true" />
  </target>

<!-- The Umplificator jar-->
<target name="packageUmplificator">
        <jar destfile="dist/umplificator_${umple.version}.jar" filesetmanifest="mergewithoutmain">
            <manifest>
			    <attribute name="Built-By" value="Cruise - University of Ottawa"/>
				<attribute name="Version" value="${umple.version}"/>
                <attribute name="Main-Class" value="cruise.umplificator.UmplificatorMain"/>
                <attribute name="Class-Path" value="."/>
            </manifest>
            <fileset dir="cruise.umplificator/bin"/>
            <zipfileset excludes="META-INF/*.SF" src="lib/umplificatorplugins/com.ibm.icu_50.1.1.v201304230130.jar"/>
            <zipfileset excludes="META-INF/*.SF" src="lib/umplificatorplugins/commons-collections4-4.0.jar"/>
            <zipfileset excludes="META-INF/*.SF" src="lib/umplificatorplugins/commons-configuration-1.10.jar"/>
            <zipfileset excludes="META-INF/*.SF" src="lib/umplificatorplugins/commons-lang-2.5.jar"/>
            <zipfileset excludes="META-INF/*.SF" src="lib/umplificatorplugins/commons-logging-1.1.3.jar"/>
            <zipfileset excludes="META-INF/*.SF" src="lib/umplificatorplugins/org.eclipse.cdt.core_5.5.0.201309180223.jar"/>
            <zipfileset excludes="META-INF/*.SF" src="lib/umplificatorplugins/org.eclipse.core.contenttype_3.4.200.v20130326-1255.jar"/>
            <zipfileset excludes="META-INF/*.SF" src="lib/umplificatorplugins/org.eclipse.core.jobs_3.5.300.v20130429-1813.jar"/>
            <zipfileset excludes="META-INF/*.SF" src="lib/umplificatorplugins/org.eclipse.core.resources_3.8.100.v20130521-2026.jar"/>
            <zipfileset excludes="META-INF/*.SF" src="lib/umplificatorplugins/org.eclipse.core.runtime_3.9.0.v20130326-1255.jar"/>
            <zipfileset excludes="META-INF/*.SF" src="lib/umplificatorplugins/org.eclipse.equinox.common_3.6.200.v20130402-1505.jar"/>
            <zipfileset excludes="META-INF/*.SF" src="lib/umplificatorplugins/org.eclipse.equinox.preferences_3.5.100.v20130422-1538.jar"/>
            <zipfileset excludes="META-INF/*.SF" src="lib/umplificatorplugins/org.eclipse.jdt.core_3.9.1.v20130905-0837.jar"/>
            <zipfileset excludes="META-INF/*.SF" src="lib/umplificatorplugins/org.eclipse.osgi_3.9.0.v20130529-1710.jar"/>
            <zipfileset excludes="META-INF/*.SF" src="lib/junit.jar"/>
            <zipfileset excludes="META-INF/*.SF" src="lib/umplificatorplugins/droolsplugins/antlr-runtime-3.5.jar"/>
            <zipfileset excludes="META-INF/*.SF" src="lib/umplificatorplugins/droolsplugins/drools-compiler-6.0.1.Final.jar"/>
            <zipfileset excludes="META-INF/*.SF" src="lib/umplificatorplugins/droolsplugins/drools-core-6.0.1.Final.jar"/>
            <zipfileset excludes="META-INF/*.SF" src="lib/umplificatorplugins/droolsplugins/drools-jsr94-6.0.1.Final.jar"/>
            <zipfileset excludes="META-INF/*.SF" src="lib/umplificatorplugins/droolsplugins/kie-api-6.0.1.Final.jar"/>
            <zipfileset excludes="META-INF/*.SF" src="lib/umplificatorplugins/droolsplugins/kie-internal-6.0.1.Final.jar"/>
            <zipfileset excludes="META-INF/*.SF" src="lib/umplificatorplugins/droolsplugins/mvel2-2.1.8.Final.jar"/>
            <zipfileset excludes="META-INF/*.SF" src="lib/umplificatorplugins/droolsplugins/protobuf-java-2.5.0.jar"/>
            <zipfileset excludes="META-INF/*.SF" src="lib/umplificatorplugins/droolsplugins/xstream-1.4.3.jar"/>
            <zipfileset excludes="META-INF/*.SF" src="lib/umplificatorplugins/droolsplugins/slf4j-api-1.7.6.jar"/>
            <zipfileset excludes="META-INF/*.SF" src="lib/umplificatorplugins/droolsplugins/slf4j-simple-1.7.6.jar"/>
            <zipfileset excludes="META-INF/*.SF" src="lib/umplificatorplugins/commons-io-2.4.jar"/>
			<zipfileset excludes="META-INF/*.SF" src="dist/umple.jar"/>
            <zipfileset excludes="META-INF/*.SF" src="lib/umplificatorplugins/log4j-core-2.0.1.jar"/>
            <zipfileset excludes="META-INF/*.SF" src="lib/umplificatorplugins/log4j-api-2.0.1.jar"/>
        </jar>
    </target>

  <target name="packageValidator">
    <antcall target="validatorJar"/>
     <echo message="Package: Umplificator and Validator jar" />
    <!-- The validator jar-->
    <echo message="Package: Umple validator jar used in Umple " />
    <jar destfile="dist/umplevalidator_${umple.version}.jar" basedir="cruise.umple.validator/bin" includes="cruise/umple/** cruise/umple/validator** org/eclipse/** joptsimple/** en.error org/** *.grammar *.error templates/** org/apache/**" >
      <manifest>
        <attribute name="Built-By" value="Cruise - University of Ottawa"/>
        <attribute name="Version" value="${umple.version}"/>
        <attribute name="Main-Class" value="cruise.umple.CodeGenValidatorMainConsole"/>
        <attribute name="Class-Path" value="${validator.project.classpath}"/>
      </manifest>
    </jar>
  </target>

  <target name="packageMainJar">
    <echo message="Package: Main command line jar" />
    <property name="umple_classpath" value=" " />
    <jar destfile="dist/umple.jar" basedir="${bin.path}" includes="cruise/umple/** joptsimple/** en.error *.grammar *.error templates/** org/apache/**" excludes="**/*Test.class">
      <manifest>
        <attribute name="Built-By" value="Cruise - University of Ottawa"/>
        <attribute name="Version" value="${umple.version}"/>
        <attribute name="Main-Class" value="cruise.umple.UmpleConsoleMain"/>
        <attribute name="Class-Path" value="${umple_classpath}"/>
      </manifest>
    </jar>  
  </target>

  <target name="packageJars">
    <antcall target="packageMainJar" />

    <echo message="Package: Umple statistics jar" />
    <jar destfile="dist/umplestats.jar" basedir="${bin.path}" includes="cruise/umple/** joptsimple/** en.error *.grammar *.error templates/** org/apache/**">
      <manifest>
        <attribute name="Built-By" value="Cruise - University of Ottawa"/>
        <attribute name="Version" value="${umple.version}"/>
        <attribute name="Main-Class" value="cruise.umple.stats.StatsMain"/>
        <attribute name="Class-Path" value="${umple_classpath}"/>
      </manifest>
    </jar>

    <echo message="Package: Umple documenter jar used to build the user manual" />
    <jar destfile="dist/umpledocs.jar" basedir="${bin.path}" includes="cruise/umple/** joptsimple/** en.error *.grammar *.error templates/** org/apache/**">
      <manifest>
        <attribute name="Built-By" value="Cruise - University of Ottawa"/>
        <attribute name="Version" value="${umple.version}"/>
        <attribute name="Main-Class" value="cruise.umple.docs.DocumenterMain"/>
        <attribute name="Class-Path" value="${umple_classpath}"/>
      </manifest>
    </jar>

    <echo message="Package: Umple sync jar used in UmpleOnline to compile and sync diagram - See PlaygroundMain" />
    <jar destfile="dist/umplesync.jar" basedir="${bin.path}" includes="cruise/umple/** joptsimple/** en.error org/apache/tools/ant/** *.grammar *.error templates/** org/apache/**">
      <manifest>
        <attribute name="Built-By" value="Cruise - University of Ottawa"/>
        <attribute name="Version" value="${umple.version}"/>
        <attribute name="Main-Class" value="cruise.umple.PlaygroundMain"/>
        <attribute name="Class-Path" value="${umple_classpath}"/>
      </manifest>
    </jar>
 
    <echo message="Package: Umplerun jar - tool for dynamically calling Umple API" />
    <copy todir="${bin.path}">
      <fileset dir="lib/umplerun"/>
    </copy>

    <jar destfile="dist/umplerun.jar" basedir="${bin.path}" includes="cruise/umple/** joptsimple/** en.error org/** *.grammar *.error templates/** org/apache/**">
      <manifest>
        <attribute name="Built-By" value="Cruise - University of Ottawa"/>
        <attribute name="Version" value="${umple.version}"/>
        <attribute name="Main-Class" value="cruise.umple.UmpleRunMain"/>
        <attribute name="Class-Path" value="${umple_classpath}"/>
      </manifest>
    </jar>

    <echo message="Package: VML - Tool for variability modeling" />
    <jar destfile="dist/vml.jar" basedir="${bin.path}" includes="cruise/umple/** joptsimple/** en.error cruise/vml/** *.grammar *.error templates/** org/apache/**">
      <manifest>
        <attribute name="Built-By" value="Cruise - University of Ottawa"/>
        <attribute name="Version" value="${umple.version}"/>
        <attribute name="Main-Class" value="cruise.vml.VmlConsole"/>
        <attribute name="Class-Path" value="${umple_classpath}"/>
      </manifest>
    </jar>

	  <!-- TODO: UNCOMMENT ONCE XTEXT IN THE MIX -->
    <!-- <copy todir="dist/update">
      <fileset dir="../cruise.umple.xtext/umpleUpdateSite"/>
    </copy>
    <copy todir="../umpleonline/update">
      <fileset dir="../cruise.umple.xtext/umpleUpdateSite"/>
    </copy> -->
  </target>
	  
  <target name="package">
    <echo message="Package Version: ${umple.version}" />
	  <antcall target="packageJars" />
	  <antcall target="packageUmpleonline" />
	  <antcall target="packageDocs" />
  </target>

  <!-- ```````````````````````````
    Deploy the application
  ``````````````````````````` -->

  <target name="deploy" if="${shouldDeploy}">
    <echo message="Deploying Version: ${umple.version}" />
    <antcall target="deployUmpleonlineJars" />
    <antcall target="deployUpdatedLib" />
  </target>
  
  <target name="deployUmpleonlineJars" >
    <copy file="dist/umplesync.jar" tofile="/h/ralph/sites/www/html/umpleonline/scripts/umplesync.jar" overwrite="true" />
    <copy file="dist/umple.jar" tofile="/h/ralph/sites/www/html/umpleonline/scripts/umple.jar" overwrite="true" />
    <copy file="dist/vml.jar" tofile="/h/ralph/sites/www/html/umpleonline/scripts/vml.jar" overwrite="true" />
  </target>

  <target name="deployUpdatedLib">
    <copy file="dist/umplesync.jar" tofile="lib/umplesync.jar" overwrite="true" />
    <copy file="dist/umple.jar" tofile="lib/umple.jar" overwrite="true" />
    <copy file="dist/vml.jar" tofile="lib/vml.jar" overwrite="true" />
  </target>

  <target name="deployUmpleonline" >
    <antcall target="deployUmpleonlineJars" />
    <antcall target="deployUmpleDocs" />    
    <copy todir="/h/ralph/sites/www/html/umpleonline">
      <fileset dir="umpleonline">
        <exclude name=".svn"/>
        <exclude name="ump"/>
      </fileset>
    </copy>
  </target>
  
  <target name="deployUmpleDocs" >
    <antcall target="packageDocs" />
    <copy todir="/h/ralph/sites/www/html/umple">
      <fileset dir="dist/cruise.umple/reference">
        <exclude name=".svn"/>
      </fileset>
    </copy>
  </target>

  <!-- ```````````````````````````
    Build the application
  ``````````````````````````` -->
  <!--
    First Build
    run this the very first time, it will package up your system 
    and generate a 
  -->
  <target name="first-build">
    <antcall target="clean" />
    <antcall target="template.init" />
    <antcall target="codegen" />
    <antcall target="rtcpp" />
    <antcall target="template.setVersion" />
    <antcall target="resetUmpleSelf" />
    <antcall target="compile" />
    <antcall target="compileValidator" />
    <antcall target="compileUmplificator" />
    <antcall target="package" />
    <antcall target="template.resetVersion" />
  </target>

  <!-- 
    Build
    run by the build machine, should work as-is on your machine, but be careful
    as your code will be run against the "latest" Umpled Umple.
   -->
  <target name="build" >
    <antcall target="clean" />
    <antcall target="template.init" />
    <antcall target="codegen" />
    <antcall target="rtcpp" />
    <antcall target="template.setVersion" />
    <antcall target="umpleSelf" />
    <antcall target="compile" />
    <antcall target="compileValidator" />
    <antcall target="compileUmplificator" />
    <antcall target="template.test" />
    <antcall target="package" />
    <antcall target="deploy" />
    <antcall target="template.resetVersion" />
  </target>

  <target name="build-umplificator" >
    <antcall target="clean" />
    <antcall target="template.init" />
    <antcall target="codegen" />
    <antcall target="rtcpp" />
    <antcall target="template.setVersion" />
    <antcall target="umpleSelf" />
    <antcall target="compile" />
    <antcall target="compileValidator" />
    <antcall target="compileUmplificator" />
    <antcall target="template.test" />
    <antcall target="package" />
    <antcall target="packageUmplificator" />
    <antcall target="packageValidator" />
    <antcall target="deploy" />
    <antcall target="template.resetVersion" />
  </target>


  <!-- can be run locally as a quick(er) test to see if the build will pass on the server -->
  <target name="pre_build" >
    <antcall target="compile" />
    <antcall target="template.test" />
  </target>

  <!-- Run This Command if you are working outside Eclipse and want to see if the tests are passing -->
  <target name="local" >
    <antcall target="umpleSelf" />
    <antcall target="compile" />
    <!-- <antcall target="template.test" /> -->
  </target>

  
  <!-- Other projects that rely on UmpleCore can call this target to ensure the the application
       Is compiled -->

  <target name="precondition" >
    <antcall target="template.clean" />
    <antcall target="template.init" />
    <antcall target="codegen" />
    <antcall target="rtcpp" />
    <antcall target="template.setVersion" />
    <antcall target="compile" />
  </target>

  <target name="postcondition" >
    <antcall target="template.resetVersion" />
  </target>

</project>

