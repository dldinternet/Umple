Simple Constraints
Constraints
noreferences

@@description

<p>Umple supports basoc OCL-type constraints that limit what umple-generated mutator methods (set, add, etc.) and constructors can do.</p>

<p>Constraints are specified within square brackets, in the same manner as guards on state machines.</p>

<p>Additional capabilities are being developed in Umple to allow other types of constraints</p>

@@syntax
[[constraint]] [[constraintBody]] [[constraintExpr]] [[linkingOp]] [[negativeConstraint]] [[stringExpr]] [[stringLit]] [[genExpr]] [[numExpr]] [[equalityOp]] [[equalsOp]] [[notequalsOp]] [[ordinalOp]] [[greaterOp]] [[lessOp]] [[moreOp]] [[smallerOp]]

@@example
// The following demonstrates two simple constraints limiting the range of age
// The test code demonstrates that this works as expected.
class Client {
  const Integer minAge =18;
  Integer age;
  [age >= minAge]
  [age <= 120]
  
  public static void main(String [ ] args) {
    Client c = new Client(40);
    for (int i: new int[] {-1,10,17,18,19,50,119,120,122,1000}) {
       System.out.println("Trying to initialize age to "+i);
       System.out.println(c.setAge(i) ? "  Success" : "  FAILURE");
    }
  }
}
@@endexample

@@example
// Example with a few more operators
class X {
  Integer i;
  Integer j;
  [i > j]
  [i < 5 && j > 0]
  [! (i == 10)]
}
@@endexample