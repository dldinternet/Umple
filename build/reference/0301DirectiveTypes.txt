Types of Directives
Directives
noreferences

@@description
<p>      
Directives appear as the 'main' entries in an Umple file.</p>

<ul>
<li><b><a href="UseStatements.html">Use statements</a></b> result in inclusion of other Umple files to allow for modularization and reuse.</li>

<br />

<li><b>Entity declarations</b> define the top level model or code elements including <a href="ClassDefinition.html">classes</a>, <a href="InterfaceDefinition.html">interfaces</a>, <a href="AssociationDefinition.html">associations</a> and <a href="AssociationClassDefinition.html">association classes</a>. Other model or code elements, such as <a href="MethodDefinition.html">methods</a> or <a href="AttributeDefinition.html">attributes</a> must be placed <i>inside</i> these entities.</li>

<br />

<li><b><a href="NamespaceDirectives.html">Namespace directives</a></b> gather entitles in logical groups. Within a namespace, entitles must have different names. Namespaces affect code generation; for example they correspond to packages in Java.</li>
<br />

<li><b><a href="StrictnessDirective.html">Strictness Directives</a></b> tell the compiler to issue extra warnings or errors in certain situations, or to turn certain errors into warnings.</li>
<br />

<li><b>Generate directives</b> tell Umple one or more generated outputs to create. You can omit these entirely and specify them on the command line or using UmpleOnline. As a second argument on the generate directive, you can specify a path (directory) where the output should be put. You can also specify --override-all to ensure subsequent directives are ignored.</li>

<br />

<li><b>The tracer directive</b> is under development and tells Umple which tracing tool to use in order to <a href="TracingBasics.html">trace execution of the code</a>.</li>

</ul>

@@syntax
[[directive]] [[generate]] [[generate_path]] [[useStatement]] [[namespace]] [[traceType]] [[entity]]
