Multiplicity
Associations
noreferences

@@description
<p>Multiplicity describes the allowable number of entities that can participate in one end of an association.
In most cases you provide both a lower and upper bound, but the "many" (or "*") case assumes a zero
lower bound.</p>

<p>The most common cases are:
<ul>
<li>* meaning 'any number' or 'many'; i.e. from 0 to whatever number the computer can handle.
<li>1 meaning 'mandatory', i.e. exactly one.
<li>0..1 meaning 'optional', i.e. a lower bound of zero, and an upper bound of one.
<li>1..* meaning 'mandatory many', i.e. a lower bound of 1 and an indeterminate upper bound.
</ul>
</p>

<p>Multiplicity must be specified for both ends of an association. At run time, code generated by Umple will ensure that the lower bounds and upper bounds are respected. Also the multiplicity determines <a href="APISummary.html">which methods will be generated in the API</a> for the model. For example, when * is specified, methods are generated to access all the associated objects, and to access an object at a specific index. The number of objects linked at run-time is called 'cardinality'.</p>

<p>If multiplicity is specified incorrectly, the compiler will generate an <a href="E004InvalidMultiplicity.html">error message highlighting the line with the multiplicity error.</a></p>

&nbsp; <br/>

@@syntax
[[multiplicity]]

@@example
// When multiplicity is given as *, which is the same as 0..*
// there can be any number of links from an instance at the other end
// of the association to instances at this end 
//
// The lower bound is zero and the upper bound is 'many'
// When multiplicity is given as *, which is the same as 0..*
// there can be any number of links from an instance at the other end
// of the association to instances at this end 
//
// The lower bound is zero and the upper bound is 'many'
class A
{
  // an instance of A has many B's
  1 -- * B;
  
  // An instance of C has many A's
  * -- 1 C;
}

class B {} class C {}//$?[End_of_model]$?

class A
{
  position 50 30 109 45;
  position.association A__C 109,19 30,0;
}

class B
{
  position 50 130 109 45;
}

class C
{
  position 215 132 109 45;
}
@@endexample

@@example
// When the mutiplicity is shown as two integers separated by ..
// then the first integer is the lower bound, and the second integer
// is the upper bound.
//
// Here, at one end of the association
// the lower bound is 0..1 (which means 'optional'
// and at the other end of the association
// the lower bound is 3 and the upper bound is 5
class D {
  0..1 -- 3..5 E;
}

class E{}
@@endexample

@@example
// When the multiplicity is a single integer there must be
// exactly that number of objects linked at all times (including
// when the object at the other end is first created).
// These multiplicities are rare
// Here, there must be exactly two objects (lower and upper bound are both 2)
class F {
  0..1 -- 2 G;
}

class G{}
@@endexample
