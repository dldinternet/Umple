Pizza Delivery
Examples
noreferences

@@description

<p>Requirements for this system are as follows:</p>

<p>A take-out pizza restaurant wants to set up an online ordering system. A customer must have an account to use the system. When the customer creats his or her account, the following information is stored: Email address (which becomes the user id), contact phone number, password, name, address, preferred credit card number, and credit card expiry date. When the customer creates an order the following information is stored: The time the order was placed, the address for delivery, the contact phone number, the total price, the credit card number charged, the expiry date of the credit card, the items ordered and the total price. An item can be pizza or drinks. For each pizza item, the information stored will include the kind of pizza (thin crust, thick crust or gluten-free crust), the size (small, medium, large), the list of toppings (e.g. cheeze, bacon, vegetables, etc.), the number of items like this (e.g. 10 would mean 10 identical pizzas) and the total price for this pizza item. For each drink item, the information stored is type, size, number, and total price. The system also records each delivery: Associated with each delivery is the name of the delivery driver; the time the driver picked up the order(s) and the time each order was delivered. A driver may take more than one order on a delivery run.</p>

@@example
class Account
{
  emailAddress;
  contactPhoneNumber;
  password;
  name;
  address;
  preferredCredCard;
  ExpiryDate;
  0..1 -- * Order;
}

class Order
{
  timePlaced;
  contactPhoneNumber;
  Float totalPrice;
  creditCardCharged;
  expiryDate;
  1 -- * OrderItem;
}

class OrderItem
{
  Integer number;
  Float totalPrice;
}

class PizzaOrder
{
    isA OrderItem;
kind;
  * -> * ToppingType toppings;
  * -> 1 StandardPizzaSize;
}

class ToppingType
{
  description;
}

class StandardPizzaSize
{
  sizeLabel;
}

class DrinkOrder
{
    isA OrderItem;
    drinkSize;
size;
}

class Delivery
{
  Time timePickedUp;
  Time TimeDelivered;
  * -- 0..1 Driver;
  0..1 -- 1..* Order;
}

class Driver
{
  name;
}

//$?[End_of_model]$?

class Account
{
  position 38 46 219 172;
  position.association Account__Order 37,172 50,0;
}

class Order
{
  position 22 271 219 154;
  position.association Order__OrderItem 219,54 0,48;
}

class OrderItem
{
  position 429 208 139 82;
}

class PizzaOrder
{
  position 240 465 139 118;
  position.association PizzaOrder__ToppingType 66,82 40,0;
  position.association PizzaOrder__ToppingType:toppings 109,20 0,0;
  position.association PizzaOrder__StandardPizzaSize 0,11 135,7;
}

class ToppingType
{
  position 465 466 149 64;
}

class StandardPizzaSize
{
  position 15 472 135 46;
}

class DrinkOrder
{
  position 494 349 109 46;
}

class Delivery
{
  position 270 47 166 82;
  position.association Delivery__Driver 166,42 0,40;
  position.association Delivery__Order 133,82 219,11;
}

class Driver
{
  position 506 49 109 46;
}

@@endexample