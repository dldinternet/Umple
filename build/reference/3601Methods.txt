Method Definition
Methods
noreferences

@@description

<p>The Umple language allows a developer to extend the functionality of a class
with arbitrary methods written the natively compiled language (e.g. Java, Php or Ruby).</p>

<p>Within these arbitrary methods, a developer may call generated methods that access the Umple attributes, associations and state machines. To determine what API methods are available to be called by methods, refer to the <a href="APISummary.html">API reference</a> or generate Javadoc from an Umple file using UmpleOnline.</p>

<p>A standard Umple method will specify the return type, then the name, then the argument list and finally the method body in curly brackets. The generated output for the method will use correct format for the generated language and will be public.

@@syntax
[[concreteMethodDeclaration]] [[methodDeclarator]] [[parameterList]] [[parameter]]

@@example
generate Java;

// A class with a method displayName() that has no arguments
class Person
{
  name;
  
  String displayName()
  {
    System.out.println("Hello, my name is " + getName());
  }
}
@@endexample

@@example
generate Java;

// A class with a method that has arguments
class Person
{
  name;
  
  String displayName(String greeting, String property)
  {
    System.out.println(
      greeting +
      ", my " +
      property +
      " is " +
      getName());
  }
}
@@endexample


@@example
generate Java;

// A class with a method that uses non-recognized syntax 'public'.
// This method will still be emitted by Umple as 'arbitrary code' but
// will not be recognized as a formal UML/umple method.
class Person
{
  name;
  
  public String displayName()
  {
    System.out.println("Hello, my name is " + getName());
  }
}
@@endexample