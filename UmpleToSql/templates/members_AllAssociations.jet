<%@ jet package="cruise.umple.ignore" class="Ignore" %>
<%
/*
This file creates the necessary attributes that the class will need for a successful foreign key to another class (association)
It creates local copies of the foreign class' private key attributes. 
Note: The foreign key constraint is not defined here, as the associated class may not be defined yet. See the members_AllForeignKeys.jet file for those.
*/
  appendln(stringBuffer, "");
  appendln(stringBuffer, "  /*------------------------*/");
  appendln(stringBuffer, "  /* MEMBER VARIABLES       */");
  appendln(stringBuffer, "  /*------------------------*/");
  
  isFirst = true;
  
  for (AssociationVariable av : uClass.getAssociationVariables())
  {
    if (!av.getIsNavigable())
    {
      continue;
    }
    
    String attribute = av.isOne() ? gen.translate("attributeOne",av) : gen.translate("attributeMany",av);
 
    if (av.isOptionalOne() || av.isOnlyOne() || av.isN())
    { 
      if (isFirst)
      {
        appendln(stringBuffer, "");
        appendln(stringBuffer,"  /*{0} Associations*/", gen.translate("type", uClass));
        isFirst = false;
      }
      UmpleClass associatedUClass = av.getRelatedAssociation().getUmpleClass();
      List<Attribute> foreignPKList = gen.resolvePrimaryKey(associatedUClass);
      for(int i = 1; i <= av.getMultiplicity().getUpperBound(); i += 1)
      { 
	    for(Attribute foreignPK : foreignPKList)
	    {
	      appendln(stringBuffer, "  {0}_{1}{2} {3},", gen.translate("type", associatedUClass),
	                                                     gen.translate("attributeOne", foreignPK), 
	                                                     av.isN() ? "_" + i : "", 
	                                                     gen.translate("type", foreignPK));
	    }
      }
    }
  }
%>