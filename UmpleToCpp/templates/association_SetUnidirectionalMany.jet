<%@ jet package="cruise.umple.ignore" class="Ignore"%>
<% String accessModifier = (av.isImmutable()) ? "private" : "public"; %>
  <%= accessModifier %> bool <%=gen.translate("setManyMethod",av)%>(<%=gen.translate("type",av)%>... <%=gen.translate("parameterMany",av)%>)
  {
    bool wasSet = false;
    <% if (customSetManyPrefixCode != null) { append(stringBuffer, "\n{0}",GeneratorHelper.doIndent(customSetManyPrefixCode, "    ")); } %>
    vector<<%=gen.translate("type",av)%>*> <%=gen.translate("parameterVerifiedMany",av)%>;
    for (int i=0 ; i<<%=gen.translate("parameterOne",av)%>.size() ; i++)
    {
      if (find(<%=gen.translate("parameterVerifiedMany",av)%>.begin(),<%=gen.translate("parameterVerifiedMany",av)%>.end(),(<%=gen.translate("parameterOne",av)%>) != <%=gen.translate("parameterVerifiedMany",av)%>.end())
      {
        continue;
      }
      <%=gen.translate("parameterVerifiedMany",av)%>.push_back(<%=gen.translate("parameterOne",av)%>);
    }

    if (<%=gen.translate("parameterVerifiedMany",av)%>.size() != <%=gen.translate("parameterMany",av)%>.length)
    {
      <% if (customSetManyPostfixCode != null) { append(stringBuffer, "\n{0}",GeneratorHelper.doIndent(customSetManyPostfixCode, "      ")); } %>
      return wasSet;
    }

    <%=gen.translate("associationMany",av)%>.clear();
    <%=gen.translate("associationMany",av)%>.addAll(<%=gen.translate("parameterVerifiedMany",av)%>);
    wasSet = true;
    <% if (customSetManyPostfixCode != null) { append(stringBuffer, "\n{0}",GeneratorHelper.doIndent(customSetManyPostfixCode, "    ")); } %>
    return wasSet;
  }

  