<%@ jet package="cruise.umple.ignore" class="Ignore" %>
<%
  
  String signature = gClass.getLookup("constructorSignature_mandatory");
  hasBody = false;
%>

  <%=uClass.getName()%>::<%=uClass.getName()%>(<%=gen.translate("constructorMandatory",uClass)%>)
  {
<%
  if (!uClass.isRoot())
  {
    appendln(stringBuffer, "");
    append(stringBuffer, "    {3}::{0}({1});", gClass.getParentClass().getLookup("constructorSignature_caller"),gClass.getParentClass().getClass().getName(),uClass.getName());
    hasBody = true;
  }
  
  if (customConstructorPrefixCode != null) 
  {
    append(stringBuffer, "\n{0}",GeneratorHelper.doIndent(customConstructorPrefixCode, "    "));
    hasBody = true;
  }
  
  for (Attribute av : uClass.getAttributes())
  {
    if (av.getIsAutounique() || av.isConstant() || "theInstance".equals(gen.translate("attributeOne",av)))
    {
      continue;
    }
  
    if (av.getIsList())
    {
      hasBody = true;
      %><%@ include file="constructor_AttributeAssignList.jet"%><%
    }
    else if (av.getModifier().equals("defaulted"))
    {
      hasBody = true;
      %><%@ include file="constructor_AttributeAssignDefaulted.jet"%><% 
    }
    else
    {
      hasBody = true;
      %><%@ include file="constructor_AttributeAssign.jet"%><%
    }
  }

  for (Attribute av : uClass.getAttributes())
  {
    if (av.getIsAutounique())
    {
      hasBody = true;
      %><%@ include file="constructor_AttributeAssignAutounique.jet"%><%
    }
  }
  
  for (AssociationVariable av : uClass.getAssociationVariables()) 
  {
    AssociationVariable relatedAssociation = av.getRelatedAssociation();
    
    if (av.isOnlyOne() && relatedAssociation.isOnlyOne())
    {
      hasBody = true;
      %><%@ include file="constructor_AssociationCreateOneToOne.jet"%><%
    }
    else if ((av.isMN() || av.isN()) && (relatedAssociation.isMandatory() || relatedAssociation.isOptionalN()))
    {
      hasBody = true;
      %><%@ include file="constructor_AssociationAssignOptionalMany.jet"%><%
    }
    else
    {
      hasBody = true;
      %><%@ include file="constructor_AssociationAssignDefault.jet"%><%
    }
  }
  
  if (customConstructorPostfixCode != null) 
  {
    append(stringBuffer, "\n{0}",GeneratorHelper.doIndent(customConstructorPostfixCode, "    "));
    hasBody = true;
  }
  
  if (hasBody)
  {
    appendln(stringBuffer, "");
    append(stringBuffer, "  }");
  }
  else
  {
    append(stringBuffer, "}");
  }
    // fxml attribute (create empty constructor)
  for (Attribute av : uClass.getAttributes())
  {
	  if ("fixml".equals(av.getModifier()))
	  {
		  accessibility = uClass.getIsSingleton() ? "private" : "public";
		  appendln(stringBuffer,"");
		  appendln(stringBuffer,"");
		  appendln(stringBuffer,"  {0} {1}()",new Object[] {accessibility, uClass.getName()});
		  appendln(stringBuffer,"  {");
		  for (Attribute a : uClass.getAttributes())
		  {
			  if ("fixml".equals(a.getModifier()) && a.getValue() != null )
				  append(stringBuffer, "    {0} = {1};\n", a.getName(),a.getValue());
		  }
		  for( CodeInjection ci  : uClass.getCodeInjections())
		  {
			  if( ci.getOperation().equals("emptyConstructor"))
			  {
				  appendln(stringBuffer,"    {0}",ci.getCode());
			  }
		  }
		  appendln(stringBuffer,"  }");
		  break;
	  }
  }
  
%>
