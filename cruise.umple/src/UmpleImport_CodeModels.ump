/*

Copyright: All contributers to the Umple Project

This file is made available subject to the open source license found at:
http://umple.org/license

Model for the subsystem used to syncronize elements in UmpleOnline

*/

namespace cruise.umple.compiler;

class UmpleImportModel
{
	internal StringBuilder umpleBuilder = new StringBuilder();
	
	public String generateUmple() {
		umpleBuilder = new StringBuilder();
		for (UmpleImportElement umpleImportElement : umpleImportElements) {
			umpleBuilder.append(umpleImportElement.generateUmple());
		}
		return umpleBuilder.toString();
	}
}

class UmpleImportPackage
{
	String generateUmple() {
		StringBuilder umpleBuilder = this.getUmpleBuilder();
		umpleBuilder.append("namespace " + this.getName() + ";");
		return umpleBuilder.toString();
	}
}

class UmpleImportClass
{
	String generateUmple() {
	    StringBuilder umpleBuilder = this.getUmpleBuilder();
		umpleBuilder.append("\n\n");
		if(isInterface){
			umpleBuilder.append("interface "+this.getName() +"\n{");
		}else{
			umpleBuilder.append("class "+ this.getName() +"\n{");
			if(superTypes.size()!=0){
				for (String superType : superTypes) {
				    if(!superType.isEmpty())
						umpleBuilder.append("\n  isA "+ superType+";");
				}
			}
		}
		for (UmpleImportAttribute umpleImportAttribute : umpleImportAttributes) {
			umpleBuilder.append(umpleImportAttribute.generateUmple());
		}
		umpleBuilder.append("\n}");
		return umpleBuilder.toString();
	}
}

class UmpleImportAttribute
{
	String generateUmple() {
		StringBuilder builder = this.getUmpleBuilder();
    	String umpleType = getUmpleTypeFromEcoreType(this.dataType);
    	builder.append("\n\t" + umpleType + this.getName()+";");
    	return builder.toString();
    }
    
    private String getUmpleTypeFromEcoreType(String uType)
  	{
		String ret="";
		if(uType.equals("EInt"))
			ret = "Integer";
		else if(uType.equals("EDouble"))
			ret = "Double";
		else if(uType.equals("EDate"))
			ret = "Date";
		else if(uType.equals("EBoolean"))
			ret = "Boolean";
		else if(uType.equals("EString")){
			if(upperBound!=1)
				ret = "String";
		}
		else
			ret = uType;
		if(upperBound!=1)
    		ret +="[]";
		if(!ret.isEmpty())
			ret += " ";
		return ret;
  	}
}
