/*

Copyright: All contributers to the Umple Project

This file is made available subject to the open source license found at:
http://umple.org/license

This generates simple metrics from Umple
  generate SimpleMetrics;
in your umple file, or the command line option
  -g SimpleMetrics

 */

namespace cruise.umple.compiler;

class SimpleMetricsGenerator
{

  public void generate()
  {
    StringBuilder code = new StringBuilder();
    StringBuilder transitions = new StringBuilder();
    String className;

    // Output basic gv file header
    code.append("Metrics generated by Umple from "+model.getUmpleFile().getSimpleFileName()+".ump\n\n");

    // Do basic counts
    int smCount = 0;
    int classCount = 0;
    Set<String> allUmpFiles = new HashSet<String>();

    for (UmpleClass uClass : model.getUmpleClasses()) {
      classCount++;
      for (Position p : uClass.getPositions()) {
        allUmpFiles.add(p.getFilename());
      }
      
      for (StateMachine sm : uClass.getStateMachines()) {
        smCount++;
      }
    }

    code.append("class count = "+classCount+"\n");
    code.append("state machine count = "+smCount+"\n");
    code.append("source file count = "+allUmpFiles.size()+"\n");
    code.append("\n");

    int totalLineCount = 0;    
    for(String fn : allUmpFiles) {

       code.append("  File "+fn+" ");

       int fileLineCount = 0;
       try {
         fileLineCount = countLinesInFile(fn);
         code.append("LOC = "+fileLineCount+"\n");         
       }
       catch (IOException e) {
         fileLineCount = 0;
         code.append("Unreadable\n");         
       }
       totalLineCount += fileLineCount;     
    }
    code.append("\n  Total LOC = "+totalLineCount + "\n");

    model.setCode(code.toString());
    writeModel();

    return;
  }

  // Output the metrics to a file 
  private void writeModel()
  {
    try
    {
      String path = model.getUmpleFile().getPath();
      File file = new File(path);
      file.mkdirs();
      String modelFilename = path + File.separator + model.getUmpleFile().getSimpleFileName() + ".metrics";
      BufferedWriter bw = new BufferedWriter(new FileWriter(modelFilename));
      bw.write(model.getCode());
      bw.flush();
      bw.close();
    }
    catch (Exception e)
    {
      throw new UmpleCompilerException("There was a problem with generating simple metrics." + e, e);
    }
  } 
 
  // Code from http://stackoverflow.com/questions/453018/number-of-lines-in-a-file-in-java 
  public int countLinesInFile(String filename) throws IOException {
    InputStream is = new BufferedInputStream(new FileInputStream(filename));
    try {
        byte[] c = new byte[1024];
        int count = 0;
        int readChars = 0;
        boolean empty = true;
        while ((readChars = is.read(c)) != -1) {
            empty = false;
            for (int i = 0; i < readChars; ++i) {
                if (c[i] == '\n') {
                    ++count;
                }
            }
        }
        return (count == 0 && !empty) ? 1 : count;
    } finally {
        is.close();
    }
}
  
  
}

