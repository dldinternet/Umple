/*

Copyright: All contributers to the Umple Project

This file is made available subject to the open source license found at:
http://umple.org/license

 */

namespace cruise.umple.compiler;

class RTCppGenerator
{

  public void generate()
  {
  	try {
  		final StringBuilder code = new StringBuilder();
  		new UmpleCppPoliciesProcessor() {
			@Override
			public void handleGeneratedContents(List<ContentsDescriptor> contentsDescriptor) {
				try {
					for(ContentsDescriptor descriptor:contentsDescriptor){
						generateContents(code, descriptor.getFileName(), descriptor.getContents(), descriptor.getPath());
					}
				} catch (IOException e) {
					throw new UmpleCompilerException("There was a problem with generating classes. " + e, e);
				}
				
			}
		}.generateRootElement(model);
		model.setCode(code.toString());
	} catch (Exception e) {
		throw new UmpleCompilerException("There was a problem with generating classes. " + e, e);
	}
  }
  
  protected void generateContents(StringBuilder model_code, String filename, String content, String owingFolder) throws IOException {		
		 String path = model.getUmpleFile().getPath() + "/";
		 owingFolder= owingFolder.replace(".", "::").replace("::", "/");
		 String qualifiedPath = path+ owingFolder;
		 File folder = new File(qualifiedPath);
		 if (!folder.exists()) {
			 folder.mkdirs();
		 }
		 
		 File folderFile = new File(qualifiedPath+ "/"+ filename); 	
		 
		 if (!folderFile.exists()) {
		 	folderFile.createNewFile();
		 }
		 model_code.append(content);
		 model_code.append("\n\n");
		 
		 BufferedWriter output = new BufferedWriter(new FileWriter(folderFile));
		 output.write(content);
		 output.close();
	}
  
}
