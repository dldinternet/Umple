/*

Copyright: All contributers to the Umple Project

This file is made available subject to the open source license found at:
http://umple.org/license

This file analyzses trace related tokens to populate the Umple meta model for
traces.

Please refer to UmpleInternalParser.ump for more details.

 */

namespace cruise.umple.compiler;

class UmpleInternalParser
{

  // if trace entity is an attribute
  private void analyzeAttributeTraceItem(Token traceToken) {

    UmpleVariable attr = traceDirective.getUmpleClass().getAttribute(traceToken.getValue("trace_entity"));
    attr = attr==null?traceDirective.getUmpleClass().getAssociationVariable(traceToken.getValue("trace_entity")):attr;

    if( attr != null )
    {
      traceAttr.setPosition(traceToken.getPosition());
      traceAttr.addUmpleVariable(attr);

      boolean wasSet = false;

      for(Token sub: traceToken.getParentToken().getSubTokens())
      {
        if(sub.is("traceOptions"))
        {
          traceAttr.setTraceSet(false);
          for(Token sub2: sub.getSubTokens())
          {
            if( "get".equals(sub2.getValue("option")) )
            {
              wasSet = true;
              traceAttr.setTraceGet(true);
            }
            if( "set".equals(sub2.getValue("option")) )
            {
              wasSet = true;
              traceAttr.setTraceSet(true);
            }
          }
        }
      }
      if(!wasSet)
      {
        traceAttr.setTraceSet(true);
      }
    }
  }
} 
