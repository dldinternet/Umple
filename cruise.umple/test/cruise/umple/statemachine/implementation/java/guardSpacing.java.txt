/*PLEASE DO NOT EDIT THIS CODE*/
/*This code was generated using the UMPLE 1.17.0.2716 modeling language!*/

package example;

public class Garage
{
  @java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy.RUNTIME)
  public @interface umplesourcefile{int line();String file();int javaline();int length();}

  //------------------------
  // MEMBER VARIABLES
  //------------------------

  //Garage Attributes
  private boolean entranceClear;

  //Garage State Machines
  enum GarageDoor { Open, Closing }
  private GarageDoor GarageDoor;

  //------------------------
  // CONSTRUCTOR
  //------------------------

  public Garage(boolean aEntranceClear)
  {
    entranceClear = aEntranceClear;
    setGarageDoor(GarageDoor.Open);
  }

  //------------------------
  // INTERFACE
  //------------------------

  public boolean setEntranceClear(boolean aEntranceClear)
  {
    boolean wasSet = false;
    entranceClear = aEntranceClear;
    wasSet = true;
    return wasSet;
  }

  public boolean getEntranceClear()
  {
    return entranceClear;
  }

  public boolean isEntranceClear()
  {
    return entranceClear;
  }

  public String getGarageDoorFullName()
  {
    String answer = GarageDoor.toString();
    return answer;
  }

  public GarageDoor getGarageDoor()
  {
    return GarageDoor;
  }

  public boolean pressButton()
  {
    boolean wasEventProcessed = false;
    
    GarageDoor aGarageDoor = GarageDoor;
    switch (aGarageDoor)
    {
      case Open:
        if (getEntranceClear())
        {
          setGarageDoor(GarageDoor.Closing);
          wasEventProcessed = true;
          break;
        }
        break;
      default:
        // Other states do respond to this event
    }

    return wasEventProcessed;
  }

  private void setGarageDoor(GarageDoor aGarageDoor)
  {
    GarageDoor = aGarageDoor;
  }

  public void delete()
  {}


  public String toString()
  {
	  String outputString = "";
	  
    return super.toString() + "["+
            "entranceClear" + ":" + getEntranceClear()+ "]"
     + outputString;
  }
}