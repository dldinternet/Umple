/* EXPERIMENTAL CODE - NON COMPILEABLE VERSION OF C++ */
/*PLEASE DO NOT EDIT THIS CODE*/
/*This code was generated using the UMPLE ${last.version} modeling language!*/

#include "QSMwithUnspecifiedRecep.h"

	
  //------------------------
  // CONSTRUCTOR
  //------------------------
  
 QSMwithUnspecifiedRecep::QSMwithUnspecifiedRecep()
  {
    setSm(s1);
  }
  
  //------------------------
  // COPY CONSTRUCTOR
  //------------------------

 QSMwithUnspecifiedRecep::QSMwithUnspecifiedRecep(const QSMwithUnspecifiedRecep & qsmwithunspecifiedrecep)
  {  }
  	
  //------------------------
  // Operator =
  //------------------------

 QSMwithUnspecifiedRecep QSMwithUnspecifiedRecep::operator=(const QSMwithUnspecifiedRecep & qsmwithunspecifiedrecep)
  {  }

  //------------------------
  // INTERFACE
  //------------------------

  string QSMwithUnspecifiedRecep::getSmFullName()
  {
    string answer = getSmStringName(sm);
    return answer;
  }
  
  QSMwithUnspecifiedRecep::Sm QSMwithUnspecifiedRecep::getSm()
  {
    return sm;
  }

  string QSMwithUnspecifiedRecep::getSmStringName (Sm sm)
  {
    switch (sm)  {
      case 0 : {return "s1"; break;}
      case 1 : {return "s2"; break;}
      case 2 : {return "error1"; break;}
      case 3 : {return "error2"; break;}
      default: {return ""; break;}
    }
  }

  bool QSMwithUnspecifiedRecep::e1()
  {
    bool wasEventProcessed = false;

    switch (sm)
    {
      case s1:
        setSm(s2);
        wasEventProcessed = true;
        break;
    }

    return wasEventProcessed;
  }

  bool QSMwithUnspecifiedRecep::unspecified()
  {
    bool wasEventProcessed = false;

    switch (sm)
    {
      case s1:
        printError();
        setSm(error1);
        wasEventProcessed = true;
        break;
      case s2:
        setSm(error2);
        wasEventProcessed = true;
        break;
    }

    return wasEventProcessed;
  }

  bool QSMwithUnspecifiedRecep::e2()
  {
    bool wasEventProcessed = false;

    switch (sm)
    {
      case s2:
        setSm(s1);
        wasEventProcessed = true;
        break;
    }

    return wasEventProcessed;
  }

  bool QSMwithUnspecifiedRecep::__autotransition9__()
  {
    bool wasEventProcessed = false;

    switch (sm)
    {
      case error1:
        setSm(s1);
        wasEventProcessed = true;
        break;
    }

    return wasEventProcessed;
  }

  bool QSMwithUnspecifiedRecep::__autotransition10__()
  {
    bool wasEventProcessed = false;

    switch (sm)
    {
      case error2:
        setSm(s2);
        wasEventProcessed = true;
        break;
    }

    return wasEventProcessed;
  }

  void QSMwithUnspecifiedRecep::setSm(Sm aSm)
  {
    sm = aSm;
  }
  

  
  //------------------------
  // DESTRUCTOR
  //------------------------
  
QSMwithUnspecifiedRecep::~QSMwithUnspecifiedRecep()
  {}