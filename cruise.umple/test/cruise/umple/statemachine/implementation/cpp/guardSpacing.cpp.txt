/* EXPERIMENTAL CODE - NON COMPILEABLE VERSION OF C++ */
/*PLEASE DO NOT EDIT THIS CODE*/
/*This code was generated using the UMPLE @UMPLE_VERSION@ modeling language!*/

#include "Garage.h"

	
  //------------------------
  // CONSTRUCTOR
  //------------------------
  
 Garage::Garage(const bool & aEntranceClear)
  {
    entranceClear = aEntranceClear;
    setGarageDoor(Open);
  }
  
  //------------------------
  // COPY CONSTRUCTOR
  //------------------------

 Garage::Garage(const Garage & garage)
  {
    this->entranceClear = garage.entranceClear;
  }
  	
  //------------------------
  // Operator =
  //------------------------

 Garage Garage::operator=(const Garage & garage)
  {
    this->entranceClear = garage.entranceClear;
  }

  //------------------------
  // INTERFACE
  //------------------------

  bool Garage::setEntranceClear(const bool & aEntranceClear)
  {
    bool wasSet = false;
    entranceClear = aEntranceClear;
    wasSet = true;
    return wasSet;
  }

  bool Garage::getEntranceClear() const
  {
    return entranceClear;
  }

  string Garage::getGarageDoorFullName()
  {
    string answer = getGarageDoorStringName(GarageDoor);
    return answer;
  }
  
  Garage::GarageDoor Garage::getGarageDoor()
  {
    return GarageDoor;
  }

  string Garage::getGarageDoorStringName (GarageDoor GarageDoor)
  {
    switch (GarageDoor)  {
      case 0 : {return "Open"; break;}
      case 1 : {return "Closing"; break;}
      default: {return ""; break;}
    }
  }

  bool Garage::pressButton()
  {
    bool wasEventProcessed = false;

    switch (GarageDoor)
    {
      case Open:
        if (getEntranceClear())
        {
          setGarageDoor(Closing);
          wasEventProcessed = true;
          break;
        }
        break;
    }

    return wasEventProcessed;
  }

  void Garage::setGarageDoor(GarageDoor aGarageDoor)
  {
    GarageDoor = aGarageDoor;
  }
  

  
  //------------------------
  // DESTRUCTOR
  //------------------------
  
Garage::~Garage()
  {}
