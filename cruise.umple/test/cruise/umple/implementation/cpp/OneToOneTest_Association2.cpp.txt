/* EXPERIMENTAL CODE - NON COMPILEABLE VERSION OF C++ */
/*PLEASE DO NOT EDIT THIS CODE*/
/*This code was generated using the UMPLE @UMPLE_VERSION@ modeling language!*/

namespace example{

public class Student
{

  //------------------------
  // MEMBER VARIABLES
  //------------------------

  //Student Attributes
  private string name;
  private int number;

  //Student Associations
  private Mentor mentor;

  //------------------------
  // CONSTRUCTOR
  //------------------------

  public Student(string aName, int aNumber, Mentor aMentor)
  {
    name = aName;
    number = aNumber;
    if (aMentor == null || aMentor.getStudent() != null)
    {
      throw new RuntimeException("Unable to create Student due to aMentor");
    }
    mentor = aMentor;
  }

  public Student(string aName, int aNumber, string aNameForMentor)
  {
    name = aName;
    number = aNumber;
    mentor = new Mentor(aNameForMentor, this);
  }

  //------------------------
  // INTERFACE
  //------------------------

  public boolean setName(string aName)
  {
    boolean wasSet = false;
    name = aName;
    wasSet = true;
    return wasSet;
  }

  public boolean setNumber(int aNumber)
  {
    boolean wasSet = false;
    number = aNumber;
    wasSet = true;
    return wasSet;
  }

  public string getName()
  {
    return name;
  }

  public int getNumber()
  {
    return number;
  }

  public Mentor getMentor()
  {
    return mentor;
  }

  public void delete()
  {
    Mentor existingMentor = mentor;
    mentor = null;
    if (existingMentor != null)
    {
      existingMentor.delete();
    }
  }

}