/*PLEASE DO NOT EDIT THIS CODE*/
/*This code was generated using the UMPLE @UMPLE_VERSION@ modeling language!*/

package example;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.PrintStream;
import java.util.Date;


public class Tracer
{

  //------------------------
  // MEMBER VARIABLES
  //------------------------

  //Tracer Attributes
  private int id;
  private String name;
  //Trace Attributes
  private boolean traceNameAfter = false;
  private boolean traceIdAfter = false;

  //------------------------
  // CONSTRUCTOR
  //------------------------

  public Tracer(int aId, String aName)
  {
    id = aId;
    name = aName;
  }

  //------------------------
  // INTERFACE
  //------------------------

  public boolean setId(int aId)
  {
    boolean wasSet = false;
    id = aId;
    wasSet = true;
    if( id == 234 )
    {
      traceIdAfter = true;
    }
    if( traceIdAfter )
    {
      fileTracer("id=" + aId);
    }
    return wasSet;
  }

  public boolean setName(String aName)
  {
    boolean wasSet = false;
    name = aName;
    wasSet = true;
    if( id == 234 )
    {
      traceNameAfter = true;
    }
    if( traceNameAfter )
    {
      fileTracer("name=" + aName);
    }
    return wasSet;
  }

  public int getId()
  {
    return id;
  }

  public String getName()
  {
    return name;
  }

  public void delete()
  {}

  //------------------------
  // FILE TRACER METHOD
  //------------------------

  static void fileTracer(Object obj)
  {
    FileOutputStream fout = null;
    Date date = new Date();
    try
    {
      // Open an output stream
      fout = new FileOutputStream ("TraceLog.txt",true);
    }
    catch (IOException e)
    {
      System.err.println ("Unable to write to file");
      System.exit(-1);
    }
    // Write traced Item information
    new PrintStream(fout).println(obj);
    try
    {
      // Close output stream
      fout.close();
    }
    catch (IOException e)
    {
      e.printStackTrace();
    }
  }

}
