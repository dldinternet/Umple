/*PLEASE DO NOT EDIT THIS CODE*/
/*This code was generated using the UMPLE ${last.version} modeling language!*/

package example;
import cruise.util.ConsoleTracer;
import java.util.Date;

public class GarageDoor
{
  @java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy.RUNTIME)
  public @interface umplesourcefile{int[] line();String[] file();int[] javaline();int[] length();}

  //------------------------
  // MEMBER VARIABLES
  //------------------------

  //GarageDoor State Machines
  enum Sm { Open, Closing, Closed, Opening, HalfOpen }
  private Sm sm;

  //------------------------
  // CONSTRUCTOR
  //------------------------

  public GarageDoor()
  {
    setSm(Sm.Open);
  }

  //------------------------
  // INTERFACE
  //------------------------

  public String getSmFullName()
  {
    String answer = sm.toString();
    return answer;
  }

  public Sm getSm()
  {
    return sm;
  }

  public boolean buttonOrObstacle()
  {
    boolean wasEventProcessed = false;
    
    Sm aSm = sm;
    switch (aSm)
    {
      case Open:
    ConsoleTracer.handle( System.currentTimeMillis()+","+Thread.currentThread().getId()+",TraceTransition.ump,26,GarageDoor,"+System.identityHashCode(this)+",sm_t,Open,buttonOrObstacle,Closing" );
        setSm(Sm.Closing);
        wasEventProcessed = true;
        break;
      case Closing:
    ConsoleTracer.handle( System.currentTimeMillis()+","+Thread.currentThread().getId()+",TraceTransition.ump,26,GarageDoor,"+System.identityHashCode(this)+",sm_t,Closing,buttonOrObstacle,Opening" );
        setSm(Sm.Opening);
        wasEventProcessed = true;
        break;
      case Closed:
    ConsoleTracer.handle( System.currentTimeMillis()+","+Thread.currentThread().getId()+",TraceTransition.ump,26,GarageDoor,"+System.identityHashCode(this)+",sm_t,Closed,buttonOrObstacle,Opening" );
        setSm(Sm.Opening);
        wasEventProcessed = true;
        break;
      case Opening:
    ConsoleTracer.handle( System.currentTimeMillis()+","+Thread.currentThread().getId()+",TraceTransition.ump,26,GarageDoor,"+System.identityHashCode(this)+",sm_t,Opening,buttonOrObstacle,HalfOpen" );
        setSm(Sm.HalfOpen);
        wasEventProcessed = true;
        break;
      case HalfOpen:
    ConsoleTracer.handle( System.currentTimeMillis()+","+Thread.currentThread().getId()+",TraceTransition.ump,26,GarageDoor,"+System.identityHashCode(this)+",sm_t,HalfOpen,buttonOrObstacle,Opening" );
        setSm(Sm.Opening);
        wasEventProcessed = true;
        break;
      default:
        // Other states do respond to this event
    }

    return wasEventProcessed;
  }

  public boolean reachBottom()
  {
    boolean wasEventProcessed = false;
    
    Sm aSm = sm;
    switch (aSm)
    {
      case Closing:
        setSm(Sm.Closed);
        wasEventProcessed = true;
        break;
      default:
        // Other states do respond to this event
    }

    return wasEventProcessed;
  }

  public boolean reachTop()
  {
    boolean wasEventProcessed = false;
    
    Sm aSm = sm;
    switch (aSm)
    {
      case Opening:
        setSm(Sm.Open);
        wasEventProcessed = true;
        break;
      default:
        // Other states do respond to this event
    }

    return wasEventProcessed;
  }

  private void setSm(Sm aSm)
  {
    sm = aSm;
  }

  public void delete()
  {}

}
