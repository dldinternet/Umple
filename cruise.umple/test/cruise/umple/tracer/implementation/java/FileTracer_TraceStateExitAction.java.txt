/*PLEASE DO NOT EDIT THIS CODE*/
/*This code was generated using the UMPLE 1.15.0.1751 modeling language!*/

package example;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.PrintStream;
import java.util.Date;


public class Light
{

  //------------------------
  // MEMBER VARIABLES
  //------------------------

  //Light State Machines
  enum Status { On, Off }
  private Status status;

  //------------------------
  // CONSTRUCTOR
  //------------------------

  public Light()
  {
    setStatus(Status.On);
  }

  //------------------------
  // INTERFACE
  //------------------------

  public String getStatusFullName()
  {
    String answer = status.toString();
    return answer;
  }

  public Status getStatus()
  {
    return status;
  }

  public boolean flip()
  {
    boolean wasEventProcessed = false;
    
    Status aStatus = status;
    switch (aStatus)
    {
      case On:
        exitStatus();
        setStatus(Status.Off);
        wasEventProcessed = true;
        break;
      case Off:
        setStatus(Status.On);
        wasEventProcessed = true;
        break;
    }

    return wasEventProcessed;
  }

  private void exitStatus()
  {
    switch(status)
    {
      case On:
        doExit();
        break;
    }
  }

  private void setStatus(Status aStatus)
  {
    if( status != null && status.equals(Status.On) && !aStatus.equals(Status.On) )
      fileTracer("exit=" + status);
    status = aStatus;

    // entry actions and do activities
    switch(status)
    {
      case On:
        doEntry();
        break;
    }
  }

  public void delete()
  {}

  //------------------------
  // FILE TRACER METHOD
  //------------------------

  static void fileTracer(Object obj)
  {
    FileOutputStream fout = null;
    Date date = new Date();
    try
    {
      // Open an output stream
      fout = new FileOutputStream ("TraceLog.txt",true);
    }
    catch (IOException e)
    {
      System.err.println ("Unable to write to file");
      System.exit(-1);
    }
    // Write traced Item information
    new PrintStream(fout).println(obj);
    try
    {
      // Close output stream
      fout.close();
    }
    catch (IOException e)
    {
      e.printStackTrace();
    }
  }

}
