// When multiplicity is given as *, which is the same as 0..*
// there can be any number of links from an instance at the other end
// of the association to instances at this end 
//
// The lower bound is zero and the upper bound is 'many'
// When multiplicity is given as *, which is the same as 0..*
// there can be any number of links from an instance at the other end
// of the association to instances at this end 
//
// The lower bound is zero and the upper bound is 'many'
class A
{
  // an instance of A has many B's
  1 -- * B;
  
  // An instance of C has many A's
  * -- 1 C;
}

class B {} class C {}//$?[End_of_model]$?

class A
{
  position 50 30 109 45;
  position.association A__C 109,19 30,0;
}

class B
{
  position 50 130 109 45;
}

class C
{
  position 215 132 109 45;
}
// When the mutiplicity is shown as two integers separated by ..
// then the first integer is the lower bound, and the second integer
// is the upper bound.
//
// Here, at one end of the association
// the lower bound is 0..1 (which means 'optional'
// and at the other end of the association
// the lower bound is 3 and the upper bound is 5
class D {
  0..1 -- 3..5 E;
}

class E{}
// When the multiplicity is a single integer there must be
// exactly that number of objects linked at all times (including
// when the object at the other end is first created).
// These multiplicities are rare
// Here, there must be exactly two objects (lower and upper bound are both 2)
class F {
  0..1 -- 2 G;
}

class G{}
