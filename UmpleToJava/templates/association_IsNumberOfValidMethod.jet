<%@ jet package="cruise.umple.ignore" class="Ignore"%>
  public boolean <%=gen.translate("isNumberOfValidMethod",av)%>()
  {
    <% if (customIsNumberOfValidPrefixCode != null) { addUncaughtExceptionVariables(stringBuffer.toString().split("\\n").length,customIsNumberOfValidPrefixCode,gen.translate("isNumberOfValidMethod",av)); 
    append(stringBuffer, "\n{0}",GeneratorHelper.doIndent(customIsNumberOfValidPrefixCode, "    ")); } %>
<% if (av.getMultiplicity().isUpperBoundMany()) { %>
    boolean isValid = <%=gen.translate("numberOfMethod",av)%>() >= <%=gen.translate("minimumNumberOfMethod",av)%>();
<% } else { %>
    boolean isValid = <%=gen.translate("numberOfMethod",av)%>() >= <%=gen.translate("minimumNumberOfMethod",av)%>() && <%=gen.translate("numberOfMethod",av)%>() <= <%=gen.translate("maximumNumberOfMethod",av)%>();
<% } %>
    <% if (customIsNumberOfValidPostfixCode != null) { addUncaughtExceptionVariables(stringBuffer.toString().split("\\n").length,customIsNumberOfValidPostfixCode,gen.translate("isNumberOfValidMethod",av)); 
    append(stringBuffer, "\n{0}",GeneratorHelper.doIndent(customIsNumberOfValidPostfixCode, "    ")); } %>
    return isValid;
  }
