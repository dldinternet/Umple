<%@ jet package="cruise.umple.ignore" class="Ignore"%>
<%
    String customRequiredNumberOfPrefixCode = GeneratorHelper.toCode(uClass.getApplicableCodeInjections("before", gen.translate("requiredNumberOfMethod",av)));
    String customRequiredNumberOfPostfixCode = GeneratorHelper.toCode(uClass.getApplicableCodeInjections("after", gen.translate("requiredNumberOfMethod",av)));
%>
<% if (customRequiredNumberOfPrefixCode == null && customRequiredNumberOfPostfixCode == null) { %><%= umpleSourceFile %>
  public static int <%=gen.translate("requiredNumberOfMethod",av)%>()
  {
    return <%=av.getMultiplicity().getLowerBound()%>;
  }
<% } else { %><%
  umpleSourceFile = getUmpleSourceFile(baseJavaLine,new String[]{
      customRequiredNumberOfPrefixCode, customRequiredNumberOfPostfixCode},
      isFake?"FAKE":getAssociationCode(new StringBuffer(), model,uClass,gClass,gen,isFirst,true));
      %><%= umpleSourceFile %>
  public static int <%=gen.translate("requiredNumberOfMethod",av)%>()
  {
    <% if (customRequiredNumberOfPrefixCode != null) { append(stringBuffer, "\n{0}",GeneratorHelper.doIndent(customRequiredNumberOfPrefixCode, "    ")); } %>
    int required = <%=av.getMultiplicity().getLowerBound()%>;
    <% if (customRequiredNumberOfPostfixCode != null) { append(stringBuffer, "\n{0}",GeneratorHelper.doIndent(customRequiredNumberOfPostfixCode, "    ")); } %>
    return required;
  }
<% } %>
