<%@ jet package="cruise.umple.ignore" class="Ignore"%>
<%
  append(stringBuffer,"\n");
  append(stringBuffer,"\n  //------------------------------");
  append(stringBuffer,"\n  //messages accepted ");
  append(stringBuffer,"\n  //------------------------------");
  append(stringBuffer,"\n");
  
  
  String evName="";
  boolean sameEvName=false;
  List<String> evList=new ArrayList<String>();
          
  for (StateMachine sm : uClass.getStateMachines())
  {
    if(sm.isQueued() || sm.isPooled()) 
    { 
      for(Event event : sm.getEvents())
      { 
        for(int i=0; i<evList.size(); i++)
        {
          if(evList.get(i).equals(event.getName()))
          {
            sameEvName=true;
          }
        }
             
        if(sameEvName == false)
        {
          if(event.isAutoTransition() == false)
          {
            if(!event.getIsTimer())
            {
              if(!event.isUnspecified())
              {
                if( !evName.equals(event.getName()))
                {
                  evList.add(event.getName());
                  append(stringBuffer,"\n");
                  append(stringBuffer,"  public void ");
                  append(stringBuffer,"{0} ({1})",gen.translate("eventMethod",event), event.getArgs());
                  append(stringBuffer,"\n  {");
          
                  if (!event.getArgs().equals(""))
                  {
                    append(stringBuffer,"\n    Vector v = new Vector({0});", event.getParams().size());
                    for ( int i=0; i < event.getParams().size(); i++)
                    {
                      append(stringBuffer,"\n    v.add({0}, {1});",i, event.getParam(i).getName());
                    }
                    append(stringBuffer,"\n    pool.put(new Message(MessageType.{0}",gen.translate("eventMethod",event));
                    append(stringBuffer,"_M, v));");
                  }
                  else
                  {
                    append(stringBuffer,"\n    pool.put(new Message(MessageType.{0}",gen.translate("eventMethod",event));
                    append(stringBuffer,"_M, null));");
                  }
                  append(stringBuffer,"\n  }");
                  append(stringBuffer,"\n");
                  evName = event.getName();
                }
              }
            }
          }
        }
        sameEvName = false;        
      }


      for (StateMachine nsm : sm.getNestedStateMachines())
      {
        for (Event e : nsm.getEvents())
        {
          for(int i=0; i<evList.size(); i++)
          {
            if(evList.get(i).equals(e.getName()))
            {
              sameEvName=true;
            }
          }
        
          if(sameEvName == false)
          {
            if(e.isAutoTransition() == false)
            {
              if(!e.getIsTimer())
              {
                if(!e.isUnspecified())
                {
                   if(e.getIsInternal() == false)
                   {
                     if( !evName.equals(e.getName()))
                     {
                       evList.add(e.getName());
                       append(stringBuffer,"\n");
                       append(stringBuffer,"  public void ");
                       append(stringBuffer,"{0} ({1})",gen.translate("eventMethod",e), e.getArgs());
                       append(stringBuffer,"\n  {");
        
                       if (!e.getArgs().equals(""))
                       {
                         evList.add(e.getName());
                         append(stringBuffer,"\n    Vector v = new Vector({0});", e.getParams().size());
                         for ( int i=0; i < e.getParams().size(); i++)
                         {
                           append(stringBuffer,"\n    v.add({0}, {1});",i, e.getParam(i).getName());
                         }
                         append(stringBuffer,"\n    pool.put(new Message(MessageType.{0}",gen.translate("eventMethod",e));
                         append(stringBuffer,"_M, v));"); 
                       }
                       else
                       {
                         append(stringBuffer,"\n    pool.put(new Message(MessageType.{0}",gen.translate("eventMethod",e));
                         append(stringBuffer,"_M, null));");
                       }
                       append(stringBuffer,"\n  }");
                       append(stringBuffer,"\n");
                       evName = e.getName();
                     }
                   }
                 }
               }
             }
           }
           sameEvName=false;
         }
        }
      }
    }
%>