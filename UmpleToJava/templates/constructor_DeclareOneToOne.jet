<%@ jet package="cruise.umple.ignore" class="Ignore" %>
<%
  
  String signature = gClass.getLookup("constructorSignature_mandatory");
  hasBody = false;
%>

  public <%=uClass.getName()%>(<%=gen.translate("constructorMandatory",uClass)%>)
  {
<%
  if (!uClass.isRoot())
  {
    appendln(stringBuffer, "");
    append(stringBuffer, "    super({0});", gClass.getParentClass().getLookup("constructorSignature_caller"));
    hasBody = true;
  }
  
  if (customConstructorPrefixCode != null) 
  {
    addUncaughtExceptionVariables(stringBuffer.toString().split("\\n").length,customConstructorPrefixCode,uClass.getName());
    append(stringBuffer, "\n{0}",GeneratorHelper.doIndent(customConstructorPrefixCode, "    "));
    hasBody = true;
  }
  
  for (Attribute av : uClass.getAttributes())
  {
    if (av.getIsAutounique() || av.isConstant() || "theInstance".equals(gen.translate("attributeOne",av)))
    {
      continue;
    }
  
    if (av.getIsList())
    {
      hasBody = true;
      %><%@ include file="constructor_AttributeAssignList.jet"%><%
    }
    else if (av.getModifier().equals("defaulted"))
    {
      hasBody = true;
      %><%@ include file="constructor_AttributeAssignDefaulted.jet"%><% 
    }
    else if (av.getIsLazy())
    {
      hasBody = true;
      %><%@ include file="constructor_AttributeAssignLazy.jet"%><%
    }
    else
    {
      hasBody = true;
      %><%@ include file="constructor_AttributeAssign.jet"%><%
    }
  }

  for (Attribute av : uClass.getAttributes())
  {
    if (av.getIsAutounique())
    {
      hasBody = true;
      %><%@ include file="constructor_AttributeAssignAutounique.jet"%><%
    }
  }
  
  for (AssociationVariable av : uClass.getAssociationVariables()) 
  {
    AssociationVariable relatedAssociation = av.getRelatedAssociation();
    
    if (av.isOnlyOne() && relatedAssociation.isOnlyOne())
    {
      hasBody = true;
      %><%@ include file="constructor_AssociationCreateOneToOne.jet"%><%
    }
    else if ((av.isMN() || av.isN()) && (relatedAssociation.isMandatory() || relatedAssociation.isOptionalN()))
    {
      hasBody = true;
      %><%@ include file="constructor_AssociationAssignOptionalMany.jet"%><%
    }
    else
    {
      hasBody = true;
      %><%@ include file="constructor_AssociationAssignDefault.jet"%><%
    }
  }
  
  if (customConstructorPostfixCode != null) 
  {
    addUncaughtExceptionVariables(stringBuffer.toString().split("\\n").length,customConstructorPostfixCode,uClass.getName());
    append(stringBuffer, "\n{0}",GeneratorHelper.doIndent(customConstructorPostfixCode, "    "));
    hasBody = true;
  }
  
  if (hasBody)
  {
    appendln(stringBuffer, "");
    append(stringBuffer, "  }");
  }
  else
  {
    append(stringBuffer, "}");
  }
  
%>
