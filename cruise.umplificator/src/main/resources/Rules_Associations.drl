package cruise.umplificator.rules

import org.eclipse.jdt.core.dom.*;
import cruise.umple.compiler.*;
import function cruise.umplificator.rules.FieldAnalyzerHelper.getFieldName
import function cruise.umplificator.rules.FieldAnalyzerHelper.getFieldType
import function cruise.umplificator.rules.FieldAnalyzerHelper.isPrimitiveOrStringOrTime
import function cruise.umplificator.rules.FieldAnalyzerHelper.getFieldContainerName
import function cruise.umplificator.rules.MethodAnalyzerHelper.getMethodContainerName

// These rules verify one association end to detect multiplicities

rule "isAssociation"
	agenda-group "LEVEL3" 
	no-loop
    when
        fieldDeclaration: FieldDeclaration()
        uClass: UmpleClass()
        method: MethodDeclaration()
       	eval(!isPrimitiveOrStringOrTime(fieldDeclaration))				   
       	eval(uClass.getName().equals(getFieldContainerName(fieldDeclaration)))
    	eval(uClass.getName().equals(getMethodContainerName(method)))
    	eval(uClass.getAssociationVariable(getFieldName(fieldDeclaration))== null)
    then
       String fieldType = getFieldType(fieldDeclaration);
       String fieldName = getFieldName(fieldDeclaration);
       System.out.println(getFieldName(fieldDeclaration));
       Multiplicity mult = new Multiplicity();
       mult.setBound("*");
       AssociationVariable assocVar = new AssociationVariable(fieldName, fieldType,"", "", mult, false);
	   AssociationEnd leftEnd = new AssociationEnd(assocVar.getName(),assocVar.getType(),null,uClass.getName(),mult);
	   AssociationEnd rightEnd = new AssociationEnd("something","A","something",uClass.getName(),mult);
       Association uAssoc = new Association(true, true, false, false, leftEnd, rightEnd);
       //uAssoc.setName(uClass.getName());
    	// We insert the association into the Working memory,
    	// so it can accessed and modified by other Rules
       uAssoc.setName(uClass.getName());
	   uClass.addAssociation(uAssoc);
       uClass.addAssociationVariable(assocVar);
       insert(assocVar);
       insert(uAssoc);
       update(uClass);    	
       System.out.println(uClass.getAssociationVariables().size());
       System.out.println(uClass.numberOfAssociations());
       //insert(uAssoc);
end

/*
rule "isOneToUnknownAssociation"
	//
end

rule "isManyToUnknownAssociation"
	//
end
*/