package cruise.umplificator.rules

import org.eclipse.jdt.core.dom.*;
import cruise.umple.compiler.*;
import function cruise.umplificator.rules.FieldAnalyzerHelper.getFieldName
import function cruise.umplificator.rules.FieldAnalyzerHelper.isPrimitiveOrStringOrTime
import function cruise.umplificator.rules.FieldAnalyzerHelper.getFieldContainerName
import function cruise.umplificator.rules.MethodAnalyzerHelper.getMethodContainerName

// These rules verify one association end to detect multiplicities

rule "isAssociation"
	agenda-group "LEVEL3" 
    when
        fieldDeclaration: FieldDeclaration()
        uClass: UmpleClass()
        method: MethodDeclaration()
       	eval(!isPrimitiveOrStringOrTime(fieldDeclaration))				   
       	eval(uClass.getName().equals(getFieldContainerName(fieldDeclaration)))
    	eval(uClass.getName().equals(getMethodContainerName(method)))
      	//eval(hasFieldAGetter(method, fieldDeclaration, uClass.getName()))
    then
       System.out.println(getFieldName(fieldDeclaration));
       Multiplicity mult = new Multiplicity();
       mult.setBound("*");
	   AssociationEnd leftEnd = new AssociationEnd(null,uClass.getName(),null,uClass.getName(),mult);
       Association uAssoc = new Association(true, true, false, false, leftEnd, null);
    	//Association uAssoc = new  Association(false,fal
		//uClass.addAssociation(uAssoc);
    	// We insert the association into the Working memory,
    	// so it can accessed and modified by other Rules
       update(uClass);    	
       insert(uAssoc);
end

/*
rule "isOneToUnknownAssociation"
	//
end

rule "isManyToUnknownAssociation"
	//
end
*/