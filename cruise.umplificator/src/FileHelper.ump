namespace cruise.umplificator;

class FileHelper {

depend java.io.File;
depend java.util.Arrays;
depend java.util.List;
depend cruise.umple.compiler.UmpleModel;
depend cruise.umplificator.generator.UmpleToUmpleGenerator;
// Logger log4j
depend org.apache.log4j.Logger;

static Logger logger = Logger.getLogger(FileHelper.class);

public static final String [] EXTENSIONS = new String [] {".java",".ump"};
public static final String separator = System.getProperty("line.separator");

 public static  List<File> getListOfFilesFromPath(String path, List<File> inputFiles){
     // Get File or a Folder from path
	  File aFile = new File(path);
	  if (!aFile.isDirectory())
	  {
		  if (aFile.isFile()){
			  int index = aFile.getName().lastIndexOf(".");
			  if (index > 0) {
				  String fileExtension = aFile.getName().substring(index);
				  if (Arrays.asList(EXTENSIONS).contains(fileExtension)){
						 inputFiles.add(aFile);
				  }
			  }
		  }
	  }
	  else {
			 for (File input: aFile.listFiles()){ 
				 getListOfFilesFromPath(input.getAbsolutePath(), inputFiles);
			 }	
	  }
	return inputFiles;
  }
  
public static String getFileExtension (File file)
{
    return file.getName().substring(file.getName().lastIndexOf("."));
}
  
  
public static void printFilesToUmplify(List<File> srcFiles){
    StringBuffer outMessage = new StringBuffer();
		outMessage.append(separator);
		outMessage.append("Files to be umplified: ");
		outMessage.append(separator);
		for (File aFile: srcFiles)
		{
			outMessage.append(aFile.getName());
			outMessage.append(separator);
		}
		outMessage.append(separator);
		outMessage.append("-----------------------");
	logger.info(outMessage.toString());
}

  public static void writeFile(UmpleModel model, String outputFolder){
        UmpleToUmpleGenerator gen = new UmpleToUmpleGenerator();
        gen.setFileExtension(EXTENSIONS[1]);
        gen.setModel(model);
        gen.setOutputFolder(outputFolder);
        gen.generate();
        logger.debug("--Output--");
        logger.debug(model.getCode());
  }
  
}